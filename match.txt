// 需要排除的节点名称正则
const excludeRegexStr = "^(?!.*(下载|测试)).*";
const excludeRegex = new RegExp(excludeRegexStr, "u");

const ruleProviders = {
    "Ipv6": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Ipv6.txt",
        "path": "./ruleset/tnnevol/Ipv6.yaml"
    },
    "LocalAreaNetwork": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/LocalAreaNetwork.txt",
        "path": "./ruleset/tnnevol/LocalAreaNetwork.yaml"
    },
    "BanAD": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/BanAD.txt",
        "path": "./ruleset/tnnevol/BanAD.yaml"
    },
    "BanProgramAD": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/BanProgramAD.txt",
        "path": "./ruleset/tnnevol/BanProgramAD.yaml"
    },
    "GoogleFCM": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/GoogleFCM.txt",
        "path": "./ruleset/tnnevol/GoogleFCM.yaml"
    },
    "Bing": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Bing.txt",
        "path": "./ruleset/tnnevol/Bing.yaml"
    },
    "OneDrive": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/OneDrive.txt",
        "path": "./ruleset/tnnevol/OneDrive.yaml"
    },
    "Microsoft": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Microsoft.txt",
        "path": "./ruleset/tnnevol/Microsoft.yaml"
    },
    "Apple": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Apple.txt",
        "path": "./ruleset/tnnevol/Apple.yaml"
    },
    "Telegram": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Telegram.txt",
        "path": "./ruleset/tnnevol/Telegram.yaml"
    },
    "OpenAi": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/OpenAi.txt",
        "path": "./ruleset/tnnevol/OpenAi.yaml"
    },
    "NetEaseMusic": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/NetEaseMusic.txt",
        "path": "./ruleset/tnnevol/NetEaseMusic.yaml"
    },
    "Games": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Games.txt",
        "path": "./ruleset/tnnevol/Games.yaml"
    },
    "YouTube": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/YouTube.txt",
        "path": "./ruleset/tnnevol/YouTube.yaml"
    },
    "Netflix": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Netflix.txt",
        "path": "./ruleset/tnnevol/Netflix.yaml"
    },
    "Bahamut": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Bahamut.txt",
        "path": "./ruleset/tnnevol/Bahamut.yaml"
    },
    "Bilibili": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/Bilibili.txt",
        "path": "./ruleset/tnnevol/Bilibili.yaml"
    },
    "ChinaMedia": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/ChinaMedia.txt",
        "path": "./ruleset/tnnevol/ChinaMedia.yaml"
    },
    "ProxyMedia": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/ProxyMedia.txt",
        "path": "./ruleset/tnnevol/ProxyMedia.yaml"
    },
    "ProxyGFWlist": {
        "type": "http",
        "format": "yaml",
        "interval": 86400,
        "behavior": "classical",
        "url": "https://raw.githubusercontent.com/tnnevol/ACL4SSR/refs/heads/master/ClashVerge/dist/clash-rules/acl4ssr-online-full/ProxyGFWlist.txt",
        "path": "./ruleset/tnnevol/ProxyGFWlist.yaml"
    }
};

// 代理组通用配置
// const groupBaseOption = {
//     "interval": 300,
//     "timeout": 3000,
//     "url": "https://www.google.com/generate_204",
//     "lazy": true,
//     "max-failed-times": 3,
//     "hidden": false
// };

// 获取符合正则表达式的代理组
function getProxiesByRegex(proxies, regex, concatProxies = []) {
    return [
        ...proxies
            .filter((e) => regex.test(e.name) && excludeRegex.test(e.name))
            .map((e) => e.name),
        ...concatProxies,
    ];
}

function main(config) {
    const allProxies = config["proxies"].map((e) => e.name);
    config["proxy-groups"] = [
        {
            name: "日常节点",
            type: "select",
            proxies: allProxies
        },
        {
            name: "纯净节点",
            type: "select",
            proxies: allProxies,
        },
        {
            name: "视频节点",
            type: "select",
            proxies: allProxies,
        }
    ];

    config["rule-providers"] = ruleProviders;
    config["rules"] = [
        ...[
            "RULE-SET,OpenAi,纯净节点"
        ],
        "DOMAIN-KEYWORD,ping0.cc,纯净节点",
        "DOMAIN-KEYWORD,claude.ai,纯净节点",
        "DOMAIN-KEYWORD,perplexity,纯净节点",
        "DOMAIN-KEYWORD,you.com,纯净节点",

        
        ...[
            "RULE-SET,YouTube,视频节点"
        ],
        // "DOMAIN-KEYWORD,youtube,视频节点",

        ...[
            "RULE-SET,ProxyGFWlist,日常节点"
        ],

        "GEOIP,CN,DIRECT",
        "MATCH,日常节点"
    ];

    return config;
}
